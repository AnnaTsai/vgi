/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vgi;

import java.awt.event.WindowEvent;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;

/**
 *
 * @author JLiu
 */
public class EdgeCostSettingsDialog extends javax.swing.JDialog {

	public static final String KEY_COST_PER_UNIT_LENGTH = "Cost per unit length";
	public static final String VAL_DEFAULT_COST_PER_UNIT_LENGTH = "1";
	public static final String KEY_COST_PER_EDGE_CROSSING = "Cost per edge crossing";
	public static final String VAL_DEFAULT_COST_PER_EDGE_CROSSING = "500";
	public static final String KEY_COST_PER_SEGMENT = "Cost per segment";
	public static final String VAL_DEFAULT_COST_PER_SEGMENT = "1";
	protected static final String NUMBER_FORMAT_ERROR_MESSAGE = " must be a nonnegative number.\n"
			+ "It can be expressed with decimal point and scientific notation, but not in fractions.";

	/**
	 * Creates new form EdgeCostSettingsDialog
	 */
	public EdgeCostSettingsDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		Preferences preferences = Preferences.userRoot().node(VGI.class.getName());
		String string = preferences.get(KEY_COST_PER_UNIT_LENGTH, VAL_DEFAULT_COST_PER_UNIT_LENGTH);
		this.costPerUnitLengthTextField.setText(string);
		string = preferences.get(KEY_COST_PER_EDGE_CROSSING, VAL_DEFAULT_COST_PER_EDGE_CROSSING);
		this.costPerEdgeCrossingTextField.setText(string);
		string = preferences.get(KEY_COST_PER_SEGMENT, VAL_DEFAULT_COST_PER_SEGMENT);
		this.costPerSegmentTextField.setText(string);
	}  // End public EdgeCostSettingsDialog(java.awt.Frame parent, boolean modal)

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        costPerUnitLengthLabel = new javax.swing.JLabel();
        costPerEdgeCrossingLabel = new javax.swing.JLabel();
        costPerSegmentLabel = new javax.swing.JLabel();
        costPerUnitLengthTextField = new javax.swing.JTextField();
        costPerEdgeCrossingTextField = new javax.swing.JTextField();
        costPerSegmentTextField = new javax.swing.JTextField();
        defaultButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        costPerUnitLengthLabel.setText("Cost per unit length:");

        costPerEdgeCrossingLabel.setText("Cost per edge crossing:");

        costPerSegmentLabel.setText("Cost per segment:");

        defaultButton.setText("Default");
        defaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(costPerEdgeCrossingLabel)
                            .add(costPerSegmentLabel)
                            .add(costPerUnitLengthLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(costPerUnitLengthTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(costPerSegmentTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(costPerEdgeCrossingTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(defaultButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(okButton)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(costPerUnitLengthLabel)
                    .add(costPerUnitLengthTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(costPerEdgeCrossingLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(costPerEdgeCrossingTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(costPerSegmentLabel)
                    .add(costPerSegmentTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(defaultButton)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void defaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultButtonActionPerformed
		this.costPerUnitLengthTextField.setText(VAL_DEFAULT_COST_PER_UNIT_LENGTH);
		this.costPerEdgeCrossingTextField.setText(VAL_DEFAULT_COST_PER_EDGE_CROSSING);
		this.costPerSegmentTextField.setText(VAL_DEFAULT_COST_PER_SEGMENT);
	}//GEN-LAST:event_defaultButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		WindowEvent windowClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
		this.dispatchEvent(windowClosing);
	}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

		String string = this.costPerUnitLengthTextField.getText();
		if (string == null) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_UNIT_LENGTH
					+ " field returns null string.");
			return;
		}
		double doubleValue;
		try {
			doubleValue = Double.valueOf(string);
		} catch (NumberFormatException numberFormatException) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_UNIT_LENGTH
					+  NUMBER_FORMAT_ERROR_MESSAGE);
			return;
		}
		if (doubleValue < 0) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_UNIT_LENGTH
					+  NUMBER_FORMAT_ERROR_MESSAGE);
			return;
		}
		String costPerUnitLengthString = string;

		string = this.costPerEdgeCrossingTextField.getText();
		if (string == null) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_EDGE_CROSSING
					+ " field returns null string.");
			return;
		}
		try {
			doubleValue = Double.valueOf(string);
		} catch (NumberFormatException numberFormatException) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_EDGE_CROSSING
					+  NUMBER_FORMAT_ERROR_MESSAGE);
			return;
		}
		if (doubleValue < 0) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_EDGE_CROSSING
					+  NUMBER_FORMAT_ERROR_MESSAGE);
			return;
		}
		String costPerEdgeCrossingString = string;

		string = this.costPerSegmentTextField.getText();
		if (string == null) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_SEGMENT
					+ " field returns null string.");
			return;
		}
		try {
			doubleValue = Double.valueOf(string);
		} catch (NumberFormatException numberFormatException) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_SEGMENT
					+  NUMBER_FORMAT_ERROR_MESSAGE);
			return;
		}
		if (doubleValue < 0) {
			JOptionPane.showMessageDialog(this, KEY_COST_PER_SEGMENT
					+  NUMBER_FORMAT_ERROR_MESSAGE);
			return;
		}
		String costPerSegmentString = string;

		Preferences preferences = Preferences.userRoot().node(VGI.class.getName());
		preferences.put(KEY_COST_PER_UNIT_LENGTH, costPerUnitLengthString);
		preferences.put(KEY_COST_PER_EDGE_CROSSING, costPerEdgeCrossingString);
		preferences.put(KEY_COST_PER_SEGMENT, costPerSegmentString);

		WindowEvent windowClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
		this.dispatchEvent(windowClosing);
	}//GEN-LAST:event_okButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(EdgeCostSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(EdgeCostSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(EdgeCostSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EdgeCostSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/*
		 * Create and display the dialog
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				EdgeCostSettingsDialog dialog = new EdgeCostSettingsDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {

					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel costPerEdgeCrossingLabel;
    private javax.swing.JTextField costPerEdgeCrossingTextField;
    private javax.swing.JLabel costPerSegmentLabel;
    private javax.swing.JTextField costPerSegmentTextField;
    private javax.swing.JLabel costPerUnitLengthLabel;
    private javax.swing.JTextField costPerUnitLengthTextField;
    private javax.swing.JButton defaultButton;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
