/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vgi.display;

import com.mxgraph.util.mxUtils;
import java.awt.Color;
import java.awt.geom.Point2D;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import vgi.automata.IniFinGeometricData;

import vgi.automata.StateDrawingData;
import vgi.automata.StateGeometricData;
import vgi.automata.TransitionDrawingData;
import vgi.fsmxml.FsmXmlInterface.FsmXmlException;

/**
 *
 * @author reng
 */
public class PreferenceStyleDialog extends javax.swing.JDialog {

    private boolean createFlag;
    private Color stateStrokeColor;
    private Color stateFillColor;
    private float stateStrokeWidth;
    private Color transitionStrokeColor;
    private float transitionStrokeWidth;
    private String startArrow;
    private String endArrow;
    
    /**
     * Creates new form PreferenceStyleDialog
     */
    public PreferenceStyleDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        createFlag=false;
        
        
        PreferenceStyleXml stylexml=new PreferenceStyleXml();
        File xmlFile=new File("defaultStyle.xml");
        Object[] styleData=null;
        try {
            styleData=stylexml.readAllData(xmlFile);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PreferenceStyleDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FsmXmlException ex) {
            Logger.getLogger(PreferenceStyleDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        StateDrawingData sdd=(StateDrawingData)styleData[0];
        if(sdd!=null){
            stateFillColorButton.setBackground(Color.decode(sdd.getFillColor()));
            stateStrokeColorButton.setBackground(Color.decode(sdd.getStrokeColor()));
            
            float width = sdd.getStrokeWidth();
            int ind = (int) width;
            stateStrokeWidthComboBox.setSelectedIndex(ind - 1);

        }
        StateGeometricData sgd=(StateGeometricData)styleData[1];
        if(sgd!=null){
            //Point2D size=sgd.getSize();
            stateWidthTextField.setText(String.valueOf(sgd.getWidth()));
            stateHeightTextField.setText(String.valueOf(sgd.getHeight()));
            stateShapeComboBox.setSelectedItem(sgd.getShape().toUpperCase());
            
        }
        TransitionDrawingData tdd=(TransitionDrawingData)styleData[2];
        if(tdd!=null){
            transitionStrokeColorButton.setBackground(Color.decode(tdd.getStrokeColor()));
            
            float width = tdd.getStrokeWidth();
            int ind = (int) width;
            transitionStrokeWidthComboBox.setSelectedIndex(ind - 1);
            this.startArrowComboBox.setSelectedItem(tdd.getStartArrow());
            this.endArrowComboBox.setSelectedItem(tdd.getEndArrow());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        transitionStylePanel = new javax.swing.JPanel();
        transitionStrokeColorLabel = new javax.swing.JLabel();
        transitionStrokeWidthComboBox = new javax.swing.JComboBox();
        transitionStrokeColorButton = new javax.swing.JButton();
        startArrowLabel = new javax.swing.JLabel();
        startArrowComboBox = new javax.swing.JComboBox();
        endArrowComboBox = new javax.swing.JComboBox();
        endArrowLabel = new javax.swing.JLabel();
        transitionFontLabel = new javax.swing.JLabel();
        transitionFontColorButton = new javax.swing.JButton();
        transitionFontSizeTextField = new javax.swing.JTextField();
        stateStylePanel = new javax.swing.JPanel();
        stateFillColorLabel = new javax.swing.JLabel();
        stateFillColorButton = new javax.swing.JButton();
        stateStrokeColorLabel = new javax.swing.JLabel();
        stateStrokeColorButton = new javax.swing.JButton();
        stateStrokeWidthComboBox = new javax.swing.JComboBox();
        stateShapeLabel = new javax.swing.JLabel();
        stateShapeComboBox = new javax.swing.JComboBox();
        stateSizePanel = new javax.swing.JPanel();
        stateWidthLabel = new javax.swing.JLabel();
        stateWidthTextField = new javax.swing.JTextField();
        stateHeightLabel = new javax.swing.JLabel();
        stateHeightTextField = new javax.swing.JTextField();
        stateFontLabel = new javax.swing.JLabel();
        stateFontColorButton = new javax.swing.JButton();
        stateFontSizeTextField = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 22, 350, 400));
        setMinimumSize(new java.awt.Dimension(350, 380));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        transitionStylePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Transition Style"));
        transitionStylePanel.setMinimumSize(new java.awt.Dimension(350, 150));
        transitionStylePanel.setPreferredSize(new java.awt.Dimension(350, 150));
        java.awt.GridBagLayout transitionStylePanelLayout = new java.awt.GridBagLayout();
        transitionStylePanelLayout.columnWidths = new int[] {0, 100, 0};
        transitionStylePanelLayout.rowHeights = new int[] {0, 30, 0, 30, 0};
        transitionStylePanel.setLayout(transitionStylePanelLayout);

        transitionStrokeColorLabel.setText("Stroke:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        transitionStylePanel.add(transitionStrokeColorLabel, gridBagConstraints);

        transitionStrokeWidthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        transitionStrokeWidthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transitionStrokeWidthComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        transitionStylePanel.add(transitionStrokeWidthComboBox, gridBagConstraints);

        transitionStrokeColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transitionStrokeColorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        transitionStylePanel.add(transitionStrokeColorButton, gridBagConstraints);

        startArrowLabel.setText("Start Arrow");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        transitionStylePanel.add(startArrowLabel, gridBagConstraints);

        startArrowComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "classic", "block", "open", "oval", "diamond", "none" }));
        startArrowComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startArrowComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        transitionStylePanel.add(startArrowComboBox, gridBagConstraints);

        endArrowComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "classic", "block", "open", "oval", "diamond", "none" }));
        endArrowComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endArrowComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        transitionStylePanel.add(endArrowComboBox, gridBagConstraints);

        endArrowLabel.setText("End Arrow");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        transitionStylePanel.add(endArrowLabel, gridBagConstraints);

        transitionFontLabel.setText("Font:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        transitionStylePanel.add(transitionFontLabel, gridBagConstraints);

        transitionFontColorButton.setEnabled(false);
        transitionFontColorButton.setPreferredSize(new java.awt.Dimension(90, 29));
        transitionFontColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transitionFontColorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        transitionStylePanel.add(transitionFontColorButton, gridBagConstraints);

        transitionFontSizeTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        transitionStylePanel.add(transitionFontSizeTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        getContentPane().add(transitionStylePanel, gridBagConstraints);

        stateStylePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("State Style"));
        stateStylePanel.setToolTipText("State Style");
        stateStylePanel.setMinimumSize(new java.awt.Dimension(300, 180));
        stateStylePanel.setPreferredSize(new java.awt.Dimension(300, 180));
        java.awt.GridBagLayout stateStylePanelLayout = new java.awt.GridBagLayout();
        stateStylePanelLayout.columnWidths = new int[] {0, 100, 0};
        stateStylePanelLayout.rowHeights = new int[] {0, 30, 0, 30, 0};
        stateStylePanel.setLayout(stateStylePanelLayout);

        stateFillColorLabel.setText("FillColor:  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        stateStylePanel.add(stateFillColorLabel, gridBagConstraints);

        stateFillColorButton.setPreferredSize(new java.awt.Dimension(90, 29));
        stateFillColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateFillColorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        stateStylePanel.add(stateFillColorButton, gridBagConstraints);

        stateStrokeColorLabel.setText("Stroke:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stateStylePanel.add(stateStrokeColorLabel, gridBagConstraints);

        stateStrokeColorButton.setPreferredSize(new java.awt.Dimension(90, 29));
        stateStrokeColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateStrokeColorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        stateStylePanel.add(stateStrokeColorButton, gridBagConstraints);

        stateStrokeWidthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        stateStylePanel.add(stateStrokeWidthComboBox, gridBagConstraints);

        stateShapeLabel.setText("Shape:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stateStylePanel.add(stateShapeLabel, gridBagConstraints);

        stateShapeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ELLIPSE", "RECTANGLE", "RHOMBUS", "HEXAGON" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        stateStylePanel.add(stateShapeComboBox, gridBagConstraints);

        java.awt.GridBagLayout stateSizePanelLayout = new java.awt.GridBagLayout();
        stateSizePanelLayout.columnWidths = new int[] {75, 75, 75, 75};
        stateSizePanel.setLayout(stateSizePanelLayout);

        stateWidthLabel.setText("w:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stateSizePanel.add(stateWidthLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        stateSizePanel.add(stateWidthTextField, gridBagConstraints);

        stateHeightLabel.setText("h:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stateSizePanel.add(stateHeightLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        stateSizePanel.add(stateHeightTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        stateStylePanel.add(stateSizePanel, gridBagConstraints);

        stateFontLabel.setText("Font:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stateStylePanel.add(stateFontLabel, gridBagConstraints);

        stateFontColorButton.setEnabled(false);
        stateFontColorButton.setPreferredSize(new java.awt.Dimension(90, 29));
        stateFontColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateFontColorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        stateStylePanel.add(stateFontColorButton, gridBagConstraints);

        stateFontSizeTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        stateStylePanel.add(stateFontSizeTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(stateStylePanel, gridBagConstraints);

        buttonPanel.setLayout(new javax.swing.BoxLayout(buttonPanel, javax.swing.BoxLayout.LINE_AXIS));

        cancelButton.setText("cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(buttonPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        createFlag=true;
        PreferenceStyleXml stylexml=new PreferenceStyleXml();

        StateDrawingData sdd=new StateDrawingData();
        sdd.setFillColor(getStateFillColor());
        sdd.setStrokeColor(getStateStrokeColor());
        sdd.setStrokeWidth(getStateStrokeWidth());

        
        StateGeometricData sgd=new StateGeometricData();
        Double w=Double.valueOf(stateWidthTextField.getText());
        Double h=Double.valueOf(stateHeightTextField.getText());
        
        Point2D pt=new Point2D.Double(w,h);
        sgd.setSize(pt);
        sgd.setShape(getStateShape());
        
        TransitionDrawingData tdd=new TransitionDrawingData();
        tdd.setStrokeColor(getTransitionStrokeColor());
        tdd.setStrokeWidth(getTransitionStrokeWidth());
        tdd.setStartArrow(getStartArrow());
        tdd.setEndArrow(getEndArrow());
        
        
        // TODO: add options for initial & final 
        IniFinGeometricData igd=new IniFinGeometricData(Math.PI,0.5,new Point2D.Double(0,0),new Point2D.Double(0,0));
        IniFinGeometricData fgd=new IniFinGeometricData(0,0.5,new Point2D.Double(0,0),new Point2D.Double(0,0));
        
        
        try {
            stylexml.write(sdd,sgd,tdd,igd,fgd,new File("defaultStyle.xml"));
        } catch (FsmXmlException ex) {
            Logger.getLogger(PreferenceStyleDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PreferenceStyleDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PreferenceStyleDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        ((VGI)this.getParent()).updateAllDefaultDGData();
        
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        createFlag=false;
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void stateStrokeColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateStrokeColorButtonActionPerformed
        Color c=JColorChooser.showDialog( this, "Stroke color", stateStrokeColor );
        if(c!=null){
            stateStrokeColor=c;
            stateStrokeColorButton.setBackground(stateStrokeColor);
        }
    }//GEN-LAST:event_stateStrokeColorButtonActionPerformed

    private void stateFillColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateFillColorButtonActionPerformed
        Color c=JColorChooser.showDialog( this, "Stroke color", stateFillColor );
        if(c!=null){
            stateFillColor=c;
            stateFillColorButton.setBackground(stateFillColor);
        }
        
    }//GEN-LAST:event_stateFillColorButtonActionPerformed

    private void stateFontColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateFontColorButtonActionPerformed
       
    }//GEN-LAST:event_stateFontColorButtonActionPerformed

    private void transitionFontColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transitionFontColorButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transitionFontColorButtonActionPerformed

    private void transitionStrokeWidthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transitionStrokeWidthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transitionStrokeWidthComboBoxActionPerformed

    private void transitionStrokeColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transitionStrokeColorButtonActionPerformed
        
        Color c=JColorChooser.showDialog( this, "Stroke color", transitionStrokeColor );
        if(c!=null){
            transitionStrokeColor=c;
            transitionStrokeColorButton.setBackground(transitionStrokeColor);
        }
    }//GEN-LAST:event_transitionStrokeColorButtonActionPerformed

    private void startArrowComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startArrowComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startArrowComboBoxActionPerformed

    private void endArrowComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endArrowComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endArrowComboBoxActionPerformed

    public String getStateFillColor(){
        Color color=stateFillColorButton.getBackground();
        return mxUtils.hexString(color);
    }
    public String getStateStrokeColor(){
        Color color=stateStrokeColorButton.getBackground();
        return mxUtils.hexString(color);
    }
    public float getStateStrokeWidth(){
        
        String width=(String)stateStrokeWidthComboBox.getSelectedItem();
        float wid=Float.parseFloat(width);
        return wid;
        
    }
    public String getStateShape(){
        return ((String)stateShapeComboBox.getSelectedItem()).toLowerCase();
    }
    public String getTransitionStrokeColor(){
        Color color=transitionStrokeColorButton.getBackground();
        return mxUtils.hexString(color);
    }
    public float getTransitionStrokeWidth(){
        
        String width=(String)transitionStrokeWidthComboBox.getSelectedItem();
        float wid=Float.parseFloat(width);
        return wid;
        
    }
    public String getStartArrow(){
        return ((String)startArrowComboBox.getSelectedItem()).toLowerCase();
    }
    public String getEndArrow(){
        return ((String)endArrowComboBox.getSelectedItem()).toLowerCase();
    }
    public boolean isCreated(){
        return createFlag;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PreferenceStyleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PreferenceStyleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PreferenceStyleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PreferenceStyleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PreferenceStyleDialog dialog = new PreferenceStyleDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox endArrowComboBox;
    private javax.swing.JLabel endArrowLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox startArrowComboBox;
    private javax.swing.JLabel startArrowLabel;
    private javax.swing.JButton stateFillColorButton;
    private javax.swing.JLabel stateFillColorLabel;
    private javax.swing.JButton stateFontColorButton;
    private javax.swing.JLabel stateFontLabel;
    private javax.swing.JTextField stateFontSizeTextField;
    private javax.swing.JLabel stateHeightLabel;
    private javax.swing.JTextField stateHeightTextField;
    private javax.swing.JComboBox stateShapeComboBox;
    private javax.swing.JLabel stateShapeLabel;
    private javax.swing.JPanel stateSizePanel;
    private javax.swing.JButton stateStrokeColorButton;
    private javax.swing.JLabel stateStrokeColorLabel;
    private javax.swing.JComboBox stateStrokeWidthComboBox;
    private javax.swing.JPanel stateStylePanel;
    private javax.swing.JLabel stateWidthLabel;
    private javax.swing.JTextField stateWidthTextField;
    private javax.swing.JButton transitionFontColorButton;
    private javax.swing.JLabel transitionFontLabel;
    private javax.swing.JTextField transitionFontSizeTextField;
    private javax.swing.JButton transitionStrokeColorButton;
    private javax.swing.JLabel transitionStrokeColorLabel;
    private javax.swing.JComboBox transitionStrokeWidthComboBox;
    private javax.swing.JPanel transitionStylePanel;
    // End of variables declaration//GEN-END:variables
}
