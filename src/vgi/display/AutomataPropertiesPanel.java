package vgi.display;

import vgi.layout.edgerouting.EdgePropertiesPanel;
import vgi.automata.Transition;
import vgi.automata.State;
import vgi.automata.Automata;
import com.mxgraph.model.mxCell;
import com.mxgraph.view.mxGraph;
import java.util.Hashtable;
import java.util.Iterator;
import javax.swing.JComboBox;
import javax.swing.JSplitPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Automata_properties.java
 *
 * Created on 2012/1/6, 下午 04:01:27
 */
/**
 *
 * @author bl606
 */
public class AutomataPropertiesPanel extends javax.swing.JPanel {

    /** Creates new form Automata_properties */
   public AutomataPropertiesPanel(DisplayUtil display,JgraphXInternalFrame jif) {
        initComponents();
        this.display = display;
        this.automata = display.getAutomata();
        this.graph = display.getGraph();
        
        if (automata != null) {
            showTransitions();
            showStates();
            showFinals();
            showInitials();
        }
        
        jInternalFrame=jif;
    }
    
    private void showStates() {
        stateTextField.setText(
                Integer.toString(automata.getAllStates().size()));

        Iterator<State> iterator = this.automata.getAllStates().iterator();
        while (iterator.hasNext()) {
            State state = iterator.next();
            stateComboBox.addItem((Object)state);
        }
    }
    
    private void showTransitions() {
        transitionTextField.setText(
                Integer.toString(automata.getAllTransitions().size()));
        
        Iterator<Transition> iterator = automata.getAllTransitions().iterator();
        while(iterator.hasNext()) {
            Transition transition = iterator.next();
            transitionComboBox.addItem(transition);
        }
    }
    
    private void showInitials() {
        this.initialTextField.setText(
                Integer.toString(automata.getInitialStates().size()));
        
        Iterator<State> iterator = this.automata.getInitialStates().iterator();
        while (iterator.hasNext()) {
            State state = iterator.next();
            initialComboBox.addItem((Object)state);
        }
    }
    
    private void showFinals() {
        this.finalTextField.setText(
                Integer.toString(automata.getFinalStates().size()));
        
        Iterator<State> iterator = this.automata.getFinalStates().iterator();
        while (iterator.hasNext()) {
            State state = iterator.next();
            finalComboBox.addItem((Object)state);
        }
    }
    
    private void setSelectionCell(Object[] cells, Object object, Boolean state) {
        for (int i=0; i<cells.length; i++) {
            
            mxCell source=(mxCell)((mxCell)cells[i]).getSource();
            mxCell target=(mxCell)((mxCell)cells[i]).getTarget();
            if(!state && (source==null || target==null)) continue;
            
            String cellString = (state) ?
                                ((mxCell)cells[i]).getValue().toString():
                                ((mxCell)cells[i]).getValue().toString() + " : '" + 
                                    ((mxCell)cells[i]).getSource().getValue() + "' to '" + 
                                    ((mxCell)cells[i]).getTarget().getValue() +"'";
            String itemString = (state) ? 
                                ((State)object).getName() :
                                ((Transition)object).toString();
            if (cellString.compareTo(itemString) == 0) {
                graph.setSelectionCell(cells[i]);
                selectedCell = (mxCell) cells[i];
                break;
            }
        }
    }
    
    private DisplayUtil display;
    private Automata automata;
    private mxGraph graph;
    private Object selectedItem;
    private mxCell selectedCell;

    JgraphXInternalFrame jInternalFrame;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        stateLabel = new javax.swing.JLabel();
        stateTextField = new javax.swing.JTextField();
        transitionLabel = new javax.swing.JLabel();
        transitionTextField = new javax.swing.JTextField();
        initialLabel = new javax.swing.JLabel();
        initialTextField = new javax.swing.JTextField();
        finalLabel = new javax.swing.JLabel();
        finalTextField = new javax.swing.JTextField();
        stateComboBox = new javax.swing.JComboBox();
        transitionComboBox = new javax.swing.JComboBox();
        initialComboBox = new javax.swing.JComboBox();
        finalComboBox = new javax.swing.JComboBox();
        goButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(300, 300));
        setLayout(new java.awt.GridBagLayout());

        stateLabel.setText("States :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(stateLabel, gridBagConstraints);

        stateTextField.setColumns(5);
        stateTextField.setEditable(false);
        stateTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        stateTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(stateTextField, gridBagConstraints);

        transitionLabel.setText("Transitions :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(transitionLabel, gridBagConstraints);

        transitionTextField.setColumns(5);
        transitionTextField.setEditable(false);
        transitionTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        transitionTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(transitionTextField, gridBagConstraints);

        initialLabel.setText("Initial states :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(initialLabel, gridBagConstraints);

        initialTextField.setColumns(5);
        initialTextField.setEditable(false);
        initialTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        initialTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(initialTextField, gridBagConstraints);

        finalLabel.setText("Final states :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(finalLabel, gridBagConstraints);

        finalTextField.setColumns(5);
        finalTextField.setEditable(false);
        finalTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        finalTextField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(finalTextField, gridBagConstraints);

        stateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        add(stateComboBox, gridBagConstraints);

        transitionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transitionComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        add(transitionComboBox, gridBagConstraints);

        initialComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initialComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        add(initialComboBox, gridBagConstraints);

        finalComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        add(finalComboBox, gridBagConstraints);

        goButton.setText("Go");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(goButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void stateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboBoxActionPerformed
        selectedItem = ((JComboBox)evt.getSource()).getSelectedItem();
        Object[] cells = graph.getChildCells(graph.getDefaultParent(), true, false);
        setSelectionCell(cells, (State)selectedItem, true);        
    }//GEN-LAST:event_stateComboBoxActionPerformed

    private void transitionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transitionComboBoxActionPerformed
        selectedItem = ((JComboBox)evt.getSource()).getSelectedItem();
        Object[] cells = graph.getChildCells(graph.getDefaultParent(), false, true);
        setSelectionCell(cells, (Transition)selectedItem, false);
    }//GEN-LAST:event_transitionComboBoxActionPerformed

    private void initialComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initialComboBoxActionPerformed
        selectedItem = ((JComboBox)evt.getSource()).getSelectedItem();
        Object[] cells = graph.getChildCells(graph.getDefaultParent(), true, false);
        setSelectionCell(cells, (State)selectedItem, true);        
    }//GEN-LAST:event_initialComboBoxActionPerformed

    private void finalComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalComboBoxActionPerformed
        selectedItem = ((JComboBox)evt.getSource()).getSelectedItem();
        Object[] cells = graph.getChildCells(graph.getDefaultParent(), true, false);
        setSelectionCell(cells, (State)selectedItem, true);        
    }//GEN-LAST:event_finalComboBoxActionPerformed

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        JSplitPane parent = (JSplitPane) this.getParent();
        if (selectedCell.isVertex()) {
            parent.setTopComponent(
                    new StatePropertiesPanel(selectedCell, 
                                             display.cellToState(selectedCell), 
                                             display,jInternalFrame));
        } else if (selectedCell.isEdge()) {
            parent.setTopComponent(
                    new EdgePropertiesPanel(selectedCell, 
                                       display.cellToTransition(selectedCell),
                                       display,jInternalFrame));
        }
    }//GEN-LAST:event_goButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox finalComboBox;
    private javax.swing.JLabel finalLabel;
    private javax.swing.JTextField finalTextField;
    private javax.swing.JButton goButton;
    private javax.swing.JComboBox initialComboBox;
    private javax.swing.JLabel initialLabel;
    private javax.swing.JTextField initialTextField;
    private javax.swing.JComboBox stateComboBox;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JComboBox transitionComboBox;
    private javax.swing.JLabel transitionLabel;
    private javax.swing.JTextField transitionTextField;
    // End of variables declaration//GEN-END:variables
}
