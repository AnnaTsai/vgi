import com.mxgraph.model.mxCell;
import com.mxgraph.model.mxICell;
import com.mxgraph.util.mxConstants;
import com.mxgraph.util.mxUtils;
import com.mxgraph.view.mxGraph;
import java.awt.Color;
import javax.swing.JComboBox;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * state_properties.java
 *
 * Created on 2012/1/6, 下午 03:53:38
 */
/**
 *
 * @author bl606
 */
public class state_properties extends javax.swing.JPanel {

    /** Creates new form state_properties */
    public state_properties(mxGraph graph, mxCell cell) {
        _graph=graph;
        _cell=cell;
        Name = cell.getId();
        Style = cell.getStyle();
       
        Transition_from="no target";
        if(cell.getEdgeCount()!=0){
        Transition_from=cell.getEdgeAt(0).getTerminal(true).getId();
        }
        
        
        initComponents();
        
        
          
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        Name_label = new javax.swing.JLabel();
        To_label = new javax.swing.JLabel();
        From_label = new javax.swing.JLabel();
        Iweight_label = new javax.swing.JLabel();
        Fweight_label = new javax.swing.JLabel();
        Style_label = new javax.swing.JLabel();
        Name_TextField = new javax.swing.JTextField();
        To_TextField = new javax.swing.JTextField();
        From_TextField = new javax.swing.JTextField();
        Initial_Weight_TextField = new javax.swing.JTextField();
        Final_weight_TextField = new javax.swing.JTextField();
        Style_ComboBox = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        Name_label.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(Name_label, gridBagConstraints);

        To_label.setText("Transition to :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(To_label, gridBagConstraints);

        From_label.setText("Transition from :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(From_label, gridBagConstraints);

        Iweight_label.setText("Initial weight :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(Iweight_label, gridBagConstraints);

        Fweight_label.setText("Final weight :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(Fweight_label, gridBagConstraints);

        Style_label.setText("Style :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(Style_label, gridBagConstraints);

        Name_TextField.setText("state 0");
        Name_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Name_TextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(Name_TextField, gridBagConstraints);

        To_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                To_TextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(To_TextField, gridBagConstraints);

        From_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                From_TextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(From_TextField, gridBagConstraints);

        Initial_Weight_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Initial_Weight_TextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(Initial_Weight_TextField, gridBagConstraints);

        Name_TextField.setText(Name);
        From_TextField.setText(Transition_from);
        Final_weight_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Final_weight_TextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(Final_weight_TextField, gridBagConstraints);

        Style_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ELLIPSE", "RECTANGLE", "RHOMBUS", "CYLINDER", "ACTOR", "CLOUD", "TRIANGLE", "HEXAGON" }));
        Style_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Style_ComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(Style_ComboBox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

private void Name_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Name_TextFieldActionPerformed
// TODO add your handling code here:
    Name = (String)Name_TextField.getText();
  
}//GEN-LAST:event_Name_TextFieldActionPerformed

private void Style_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Style_ComboBoxActionPerformed
// TODO add your handling code here:
    JComboBox cb = (JComboBox)evt.getSource();
    //Style = "shape=" + ((String)cb.getSelectedItem()).toLowerCase();
    Object[] objects = new Object[1];
    objects[0]=_cell;
    System.out.print(Style);
    _graph.setCellStyles("shape",((String)cb.getSelectedItem()).toLowerCase() ,objects );
    
//    this.repaint();
//    System.out.println(_cell.getStyle());
}//GEN-LAST:event_Style_ComboBoxActionPerformed

private void To_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_To_TextFieldActionPerformed
// TODO add your handling code here:
    Transition_to = (String)To_TextField.getText();
}//GEN-LAST:event_To_TextFieldActionPerformed

private void From_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_From_TextFieldActionPerformed
// TODO add your handling code here:
    Transition_from = (String)From_TextField.getText();
}//GEN-LAST:event_From_TextFieldActionPerformed

private void Initial_Weight_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Initial_Weight_TextFieldActionPerformed
// TODO add your handling code here:
    Initial_weight = (String)Initial_Weight_TextField.getText();
}//GEN-LAST:event_Initial_Weight_TextFieldActionPerformed

private void Final_weight_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Final_weight_TextFieldActionPerformed
// TODO add your handling code here:
    Final_weight = (String)Initial_Weight_TextField.getText();
}//GEN-LAST:event_Final_weight_TextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Final_weight_TextField;
    private javax.swing.JTextField From_TextField;
    private javax.swing.JLabel From_label;
    private javax.swing.JLabel Fweight_label;
    private javax.swing.JTextField Initial_Weight_TextField;
    private javax.swing.JLabel Iweight_label;
    private javax.swing.JTextField Name_TextField;
    private javax.swing.JLabel Name_label;
    private javax.swing.JComboBox Style_ComboBox;
    private javax.swing.JLabel Style_label;
    private javax.swing.JTextField To_TextField;
    private javax.swing.JLabel To_label;
    // End of variables declaration//GEN-END:variables

    private String Name;
    private String Transition_to;
    private String Transition_from;
    private String Initial_weight;
    private String Final_weight;
    private String Style;
    private mxCell _cell;
    private mxGraph _graph;

    
    public void setFillColor(mxGraph graph,Color color){
        Object[] objects = new Object[1];
        objects[0]=_cell;
        graph.setCellStyles("fillColor", mxUtils.hexString(color),objects);
        
    }
    public void setStrokeColor(mxGraph graph,Color color){
        Object[] objects = new Object[1];
        objects[0]=_cell;
        graph.setCellStyles("strokeColor", mxUtils.hexString(color),objects);
        
    }
    public void setStrokeWidth(mxGraph graph,float width){
        Object[] objects = new Object[1];
        objects[0]=_cell;
        String wid=String.valueOf(width);
        graph.setCellStyles("strokeWidth",wid,objects);
        
    }
    
    //fill cell with gradient color
    //fromColor-->toColor
    //direction: 1-north 2-south 3-east 4-west
    public void setGradientColor(mxGraph graph,Color fromColor, Color toColor,int direction)
    {
        Object[] objects = new Object[1];
        objects[0]=_cell;
        graph.setCellStyles("fillColor", mxUtils.hexString(fromColor),objects);
        graph.setCellStyles("gradientColor", mxUtils.hexString(toColor),objects);
        switch(direction){
            case 1:
                graph.setCellStyles("gradientDirection",mxConstants.DIRECTION_NORTH,objects);
                break;
            case 2:
                graph.setCellStyles("gradientDirection",mxConstants.DIRECTION_SOUTH,objects);
                break;
            case 3:
                graph.setCellStyles("gradientDirection",mxConstants.DIRECTION_EAST,objects);
                break;
            case 4:
                graph.setCellStyles("gradientDirection",mxConstants.DIRECTION_WEST,objects);
                break;
                
        }
        
    }
    
    public void setShadow(mxGraph graph,boolean hasShadow)
    {
        Object[] objects = new Object[1];
        objects[0]=_cell;
        if(hasShadow)
            graph.setCellStyles("shadow", "true",objects);
        else
            graph.setCellStyles("shadow", "false",objects);
    }
    
    //Global
    public void setShadowColor(Color color)
    {
        mxConstants.SHADOW_COLOR = color;
    }
    public void setShadowOffset(int offsetx,int offsety)
    {
      
        mxConstants.SHADOW_OFFSETX=offsetx;
        mxConstants.SHADOW_OFFSETY=offsety;
        
    }
    

}
