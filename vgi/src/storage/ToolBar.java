package storage;

import event.UIEvent;
import event.UserEventConstants;
import javax.swing.AbstractButton;
import javax.swing.JToolBar;

/**
 * creates a tool bar object with many useful buttons
 * The icons used in this project are made by Freeiconsdownload from http://www.freeiconsdownload.com
 * @author Joe Wang
 */
public class ToolBar extends javax.swing.JFrame {

  /** Creates new form ToolBar */
  public ToolBar() {
    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        addStateToggleBtn = new javax.swing.JToggleButton();
        addTransitionToggleBtn = new javax.swing.JToggleButton();
        deleteBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        zoomInBtn = new javax.swing.JButton();
        defaultZoomBtn = new javax.swing.JButton();
        zoomOutBtn = new javax.swing.JButton();
        autoZoomBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        setInitialStateBtn = new javax.swing.JButton();
        setFinalStateBtn = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jToolBar1.add(jPanel1);

        addStateToggleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/add.png"))); // NOI18N
        addStateToggleBtn.setToolTipText("add states");
        addStateToggleBtn.setFocusable(false);
        addStateToggleBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addStateToggleBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addStateToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStateToggleBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(addStateToggleBtn);

        addTransitionToggleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/arrow_right.png"))); // NOI18N
        addTransitionToggleBtn.setToolTipText("add transitions");
        addTransitionToggleBtn.setFocusable(false);
        addTransitionToggleBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addTransitionToggleBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addTransitionToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTransitionToggleBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(addTransitionToggleBtn);

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/close.png"))); // NOI18N
        deleteBtn.setToolTipText("delete");
        deleteBtn.setFocusable(false);
        deleteBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteBtn);
        jToolBar1.add(jSeparator1);

        zoomInBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/zoomin.png"))); // NOI18N
        zoomInBtn.setToolTipText("zoom in");
        zoomInBtn.setFocusable(false);
        zoomInBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        zoomInBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        zoomInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(zoomInBtn);

        defaultZoomBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/zoom.png"))); // NOI18N
        defaultZoomBtn.setToolTipText("default view");
        defaultZoomBtn.setFocusable(false);
        defaultZoomBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        defaultZoomBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        defaultZoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultZoomBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(defaultZoomBtn);

        zoomOutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/zoomout.png"))); // NOI18N
        zoomOutBtn.setToolTipText("zoom out");
        zoomOutBtn.setFocusable(false);
        zoomOutBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        zoomOutBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        zoomOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(zoomOutBtn);

        autoZoomBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/refresh.png"))); // NOI18N
        autoZoomBtn.setToolTipText("auto fit");
        autoZoomBtn.setFocusable(false);
        autoZoomBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        autoZoomBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        autoZoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoZoomBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(autoZoomBtn);
        jToolBar1.add(jSeparator2);

        setInitialStateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/object_07.png"))); // NOI18N
        setInitialStateBtn.setToolTipText("set initial state");
        setInitialStateBtn.setFocusable(false);
        setInitialStateBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        setInitialStateBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        setInitialStateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInitialStateBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(setInitialStateBtn);

        setFinalStateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/yellow/24/object_06.png"))); // NOI18N
        setFinalStateBtn.setToolTipText("set final state");
        setFinalStateBtn.setFocusable(false);
        setFinalStateBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        setFinalStateBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        setFinalStateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFinalStateBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(setFinalStateBtn);
        jToolBar1.add(jSeparator3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      public void ItemsEnableSetting(String state){
          if(state.equals("no file")){
              for(int i=0;i<this.jToolBar1.getComponentCount();i++){
                  try{
                      AbstractButton btn = (AbstractButton)this.jToolBar1.getComponent(i);
                      btn.setEnabled(false);
                  } catch (Exception e) {
                  }
              }
          }else if (state == "has file"){
              for(int i=0;i<this.jToolBar1.getComponentCount();i++){
                  try{
                      AbstractButton btn = (AbstractButton)this.jToolBar1.getComponent(i);
                      btn.setEnabled(true);
                  } catch (Exception e) {
                  }
              }
          }
      }
    private void addStateToggleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStateToggleBtnActionPerformed
      if (addStateToggleBtn.isSelected()) {
        addTransitionToggleBtn.setSelected(false);
      }
      UIEvent uievent = new UIEvent(UserEventConstants.ADD_STATE_BUTTON);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_addStateToggleBtnActionPerformed

    private void addTransitionToggleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTransitionToggleBtnActionPerformed
      if (addTransitionToggleBtn.isSelected()) {
        addStateToggleBtn.setSelected(false);
      }
      UIEvent uievent = new UIEvent(UserEventConstants.CONNECT_BUTTON);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_addTransitionToggleBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.DELETE_BUTTON);
      Storage.getInstance().eventHappen(uievent);
      Storage.getInstance().setUserHint("Storage: DELETE_BUTTON_CLICKED");
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void setFinalStateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFinalStateBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.SET_FINAL_STATE);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_setFinalStateBtnActionPerformed

    private void setInitialStateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInitialStateBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.SET_INITIAL_STATE);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_setInitialStateBtnActionPerformed

    private void zoomInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.ZOOM_IN);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_zoomInBtnActionPerformed

    private void zoomOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.ZOOM_OUT);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_zoomOutBtnActionPerformed

    private void autoZoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoZoomBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.FIT_WINDOW);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_autoZoomBtnActionPerformed

    private void defaultZoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultZoomBtnActionPerformed
      UIEvent uievent = new UIEvent(UserEventConstants.ACTUAL_SIZE);
      Storage.getInstance().eventHappen(uievent);
    }//GEN-LAST:event_defaultZoomBtnActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new ToolBar().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton addStateToggleBtn;
    private javax.swing.JToggleButton addTransitionToggleBtn;
    private javax.swing.JButton autoZoomBtn;
    private javax.swing.JButton defaultZoomBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton setFinalStateBtn;
    private javax.swing.JButton setInitialStateBtn;
    private javax.swing.JButton zoomInBtn;
    private javax.swing.JButton zoomOutBtn;
    // End of variables declaration//GEN-END:variables

    /**
     * returns toolbar
     * @return toolbar
     */
  public JToolBar getToolBar() {
    return jToolBar1;
  }
}
